# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import proto_pb2 as proto_dot_proto__pb2


class ApiStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
        """Constructor.

        Args:
          channel: A grpc.Channel.
        """
        self.Register = channel.unary_unary(
            '/proto.Api/Register',
            request_serializer=proto_dot_proto__pb2.RegisterRequest.SerializeToString,
            response_deserializer=proto_dot_proto__pb2.User.FromString,
        )
        self.CreateTopic = channel.unary_unary(
            '/proto.Api/CreateTopic',
            request_serializer=proto_dot_proto__pb2.CreateTopicRequest.SerializeToString,
            response_deserializer=proto_dot_proto__pb2.Topic.FromString,
        )


class ApiServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def Register(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTopic(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Register': grpc.unary_unary_rpc_method_handler(
            servicer.Register,
            request_deserializer=proto_dot_proto__pb2.RegisterRequest.FromString,
            response_serializer=proto_dot_proto__pb2.User.SerializeToString,
        ),
        'CreateTopic': grpc.unary_unary_rpc_method_handler(
            servicer.CreateTopic,
            request_deserializer=proto_dot_proto__pb2.CreateTopicRequest.FromString,
            response_serializer=proto_dot_proto__pb2.Topic.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'proto.Api', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
